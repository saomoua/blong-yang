// CUSTOM PROJECT MIXINS
@mixin antialiasing {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}
@mixin border-radius($radius) {
  border-radius: $radius;
  background-clip: padding-box;
}
@mixin box-shadow($x: rem-calc(4), $y: rem-calc(4), $blur: rem-calc(4), $spread: 0, $color: rgba($color-black, 0.05)) {
  box-shadow: $x $y $blur $spread $color;
}
@mixin button {
  color: $color-white;
  cursor: pointer;
  font-size: rem-calc(18);
  font-weight: $font-weight-bold;
  text-transform: uppercase;
}
// element centered on Y axis of container
@mixin centered-axis-x($position: absolute, $left: 50%, $transformX: -50%) {
  position: $position;
  left: $left;
  transform: translateX($transformX);
}
@mixin centered-axis-xy($position: absolute, $left: 50%, $top: 50%, $transformX: -50%, $transformY: -50%) {
  left: $left;
  position: $position;
  top: $top;
  transform: translate($transformX, $transformY);
}
// element centered on Y axis of container
@mixin centered-axis-y($position: absolute, $top: 50%, $transformY: -50%) {
  position: $position;
  top: $top;
  transform: translateY($transformY);
}
@mixin is-clipped {
  clip: rect(1px, 1px, 1px, 1px);
  clip-path: inset(1px 1px 1px 1px);
  height: 1px;
  overflow: hidden;
  pointer-events: none;
  position: absolute;
  width: 1px;
}
@mixin links-external() {
  .svg {
    fill: rgba($color-brand-blue, .5);
  }
}
@mixin links-underline($color: $color-links, $font-weight: $font-weight-bold, $decoration-color: $color-links-underline, $color-hover: $color-links-hover, $decoration-hover: $color-links-hover) {
  @include antialiasing;
  @include transition(all 150ms ease-in-out);
  color: $color;
  font-weight: $font-weight;
  text-decoration: underline;
  text-decoration-color: $decoration-color;
  text-decoration-skip: ink;

  &:focus,
  &:hover {
    color: $color-hover;
    text-decoration-color: $decoration-hover;
  }
}
@mixin links-underline-active($links-underline-active: $color-brand-yellow) {
  border-bottom: rem-calc(4) solid $links-underline-active;
  text-decoration: none;
}
@mixin list-reset() {
  list-style: none;
  margin: 0;
  padding: 0;
}
@mixin section-margin {
  margin: rem-calc(20) 0;
  @include breakpoint(large) {
    margin: rem-calc(40) 0;
  }
}
@mixin section-padding {
  padding: rem-calc(20) 0;
  @include breakpoint(large) {
    padding: rem-calc(40) 0;
  }
}
@mixin title-primary {
  font-size: rem-calc(32);
  line-height: 1;
  @include breakpoint(large) {
    font-size: rem-calc(48);
  }
}
@mixin title-secondary {
  font-size: rem-calc(24);
  line-height: 1.2;
  @include breakpoint(large) {
    font-size: rem-calc(32);
  }
}
@mixin title-tertiary {
  font-size: rem-calc(20);
  line-height: 1.2;
  @include breakpoint(large) {
    font-size: rem-calc(24);
  }
}
@mixin text-shadow($x: 0, $y: rem-calc(2), $blur: rem-calc(2), $color: rgba($color-black, 0.5)) {
  text-shadow: $x $y $blur $color;
}
@mixin text-wrap {
  /* These are technically the same, but use both */
  overflow-wrap: break-word;
  word-wrap: break-word;
  -ms-word-break: break-all;
  /* This is the dangerous one in WebKit, as it breaks things wherever */
  word-break: break-all;
  /* Instead use this non-standard one: */
  word-break: break-word;
  /* Adds a hyphen where the word breaks, if supported (No Blink) */
  -ms-hyphens: auto;
  -moz-hyphens: auto;
  -webkit-hyphens: auto;
  hyphens: auto;
}
// triple dots in variable allows for multiple chained values
@mixin transform($transforms...) {
  transform: $transforms;
}
@mixin transition($args...) {
  transition: $args;
}